// @(h)MailslotBase.cs ver 0.00 ( '22.03.24 Nov-Lab ) 作成開始
// @(h)MailslotBase.cs ver 0.51 ( '22.03.27 Nov-Lab ) ベータ版完成
// @(h)MailslotBase.cs ver 0.51a( '22.05.24 Nov-Lab ) その他  ：コメント整理

// @(s)
// 　【メールスロット基本】メールスロット機能の基本部分です。

using System;
using System.Text;
using Microsoft.Win32.SafeHandles;

using NovLab.Win32;


namespace NovLab.IO.Mailslot
{
    //====================================================================================================
    /// <summary>
    /// 【メールスロット基本】サーバー側とクライアント側で共通の定義やメソッドを提供します。
    /// </summary>
    //====================================================================================================
    public static class MailslotBase
    {
        //====================================================================================================
        // 公開定数
        //====================================================================================================
        /// <summary>
        /// 【Encoding】メールスロットでの文字列送受信時に適用する Encoding(UTF8) です。
        /// </summary>
        public static Encoding ENCODING => Encoding.UTF8;
    }


    // ＜メモ＞
    /// ・無効値は INVALID_HANDLE_VALUE(-1)
    /// ・Win32APIにおけるクローズ方法は CloseHandle
    /// ・Dispose-Finalizeパターンは基本クラスで実装されています。
    //====================================================================================================
    /// <summary>
    /// 【メールスロット用セーフハンドル】メールスロット用のセーフハンドルを管理します。
    /// </summary>
    //====================================================================================================
    public class SafeMailslotHandle : SafeHandleMinusOneIsInvalid
    {
        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【コンストラクター】新しいインスタンスを初期化します。
        /// </summary>
        //--------------------------------------------------------------------------------
        protected SafeMailslotHandle() : base(true) { }  // ハンドルを安全に解放するよう指定して初期化


        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【ハンドル解放】メールスロット用セーフハンドルを閉じます。
        /// </summary>
        /// <returns>
        /// 処理結果[true = 正常終了 / false = 異常終了]
        /// </returns>
        //--------------------------------------------------------------------------------
        protected override bool ReleaseHandle() => Win32API.CloseHandle(handle);
    }


    //====================================================================================================
    /// <summary>
    /// 【メールスロット情報】GetMailslotInfo API関数で取得する情報をひとまとめに管理します。
    /// </summary>
    //====================================================================================================
    public struct MailslotInfo
    {
        /// <summary>
        /// 【最大メッセージサイズ(バイト数)】
        /// </summary>
        public uint maxMessageSize;

        /// <summary>
        /// 【次のメッセージのサイズ(バイト数)】
        /// </summary>
        public uint nextSize;

        /// <summary>
        /// 【メッセージ数】
        /// </summary>
        public uint messageCount;

        /// <summary>
        /// 【読み取りタイムアウトの間隔(ミリ秒)】[0 = メッセージが存在しないときは即座に制御を返します]
        /// </summary>
        public uint readTimeout;
    }
}
